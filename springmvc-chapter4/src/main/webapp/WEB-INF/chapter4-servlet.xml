<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
        
        
    

    <!-- ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- 处理器 -->
    <bean name="/hello" class="cn.javass.chapter4.web.controller.HelloWorldController"/>

    <bean name="/helloWithoutReturnModelAndView" class="cn.javass.chapter4.web.controller.HelloWorldWithoutReturnModelAndViewController"/>
    
    
    <bean name="/helloCache" class="cn.javass.chapter4.web.controller.HelloWorldCacheController">
        <property name="cacheSeconds" value="5"/>
    </bean>
    
    <bean name="/helloNoCache" class="cn.javass.chapter4.web.controller.HelloWorldCacheController">
        <property name="cacheSeconds" value="0"/>
    </bean>
    
    <bean name="/helloLastModified" class="cn.javass.chapter4.web.controller.HelloWorldLastModifiedCacheController">
    </bean>
    
    <bean name="/helloWithPOST" class="cn.javass.chapter4.web.controller.HelloWorldController">
        <property name="supportedMethods" value="POST"></property>
    </bean>
    
    <bean name="/helloRequireSession" class="cn.javass.chapter4.web.controller.HelloWorldController">
        <property name="requireSession" value="true"/>
    </bean>
    
    
    <bean name="/forwardToServlet" class="org.springframework.web.servlet.mvc.ServletForwardingController">
        <property name="servletName" value="forwarding"></property>
    </bean>

    <!--http://localhost:8080/springmvc-chapter4/abstractCommand?username=123&password=123-->
    <bean name="/abstractCommand" class="cn.javass.chapter4.web.controller.MyAbstractCommandController">
        <!-- 也可以通过依赖注入 注入命令实现类 -->
        <!-- property name="commandClass" value="cn.javass.chapter4.model.UserModel"/-->
    </bean>
    
    
    <bean name="/simpleForm" class="cn.javass.chapter4.web.controller.RegisterSimpleFormController">
        <property name="formView" value="register"/>
        <property name="successView" value="redirect:/success"/>
    </bean>
    
    <bean name="/canCancelForm" class="cn.javass.chapter4.web.controller.CanCancelRegisterSimpleFormController">
        <property name="formView" value="register"/>
        <property name="successView" value="redirect:/success"/>
        
        <property name="cancelParamKey" value="_cancel"/>
        <property name="cancelView" value="redirect:/cancel"/>
    </bean>

    <bean name="/success" class="cn.javass.chapter4.web.controller.SuccessController"/>
    <bean name="/cancel" class="cn.javass.chapter4.web.controller.CancelController"/>


    <bean name="/infoFillWizard" class="cn.javass.chapter4.web.controller.InfoFillWizardFormController">
        <property name="pages">
            <list>
                <value>wizard/baseInfo</value>
                <value>wizard/schoolInfo</value>
                <value>wizard/workInfo</value>
            </list>
        </property>
    </bean>
    <!--该控制器接收到请求后直接选择参数化的视图，这样的好处是在配置文件中配置，从而避免程序的硬编码，比如像帮助页面等不需要进行功能处理，因此直接使用该控制器映射到视图。-->
    
    <bean name="/parameterizableView" class="org.springframework.web.servlet.mvc.ParameterizableViewController">
        <property name="viewName" value="success"/>
    </bean>
    
    <bean name="/index?" class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>
    <bean name="/index1/*" class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>
    <bean name="/index2/**" class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>
    <bean name="/*.html" class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>
    <bean name="/index3/*.html" class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>
    <bean name="/*.htm" class="org.springframework.web.servlet.mvc.UrlFilenameViewController">
        <property name="prefix" value="test"/>
        <property name="suffix" value="test"/>
    </bean>
    
    
    <bean name="/long/long" class="org.springframework.web.servlet.mvc.UrlFilenameViewController">
        <property name="prefix" value="test1"></property>
    </bean>
    <bean name="/long/**/abc" class="org.springframework.web.servlet.mvc.UrlFilenameViewController">
        <property name="prefix" value="test2"/>
    </bean>
    <bean name="/long/**" class="org.springframework.web.servlet.mvc.UrlFilenameViewController">
        <property name="prefix" value="test3"/>
    </bean>
    <bean name="/**" class="org.springframework.web.servlet.mvc.UrlFilenameViewController">
        <property name="prefix" value="test4"></property>
    </bean>
    
    
    

    
   
   <bean id="userService" class="cn.javass.chapter4.service.UserService"/>
   
   <bean name="/user/**" class="cn.javass.chapter4.web.controller.UserController">
       <property name="userService" ref="userService"/>
       <property name="createView" value="user/create"/>
       <property name="updateView" value="user/update"/>
       <property name="deleteView" value="user/delete"/>
       <property name="listView" value="user/list"/>
       <property name="redirectToListView" value="redirect:/user/list"/>
       <!-- 使用PropertiesMethodNameResolver来解析功能处理方法名 -->       
       <!--property name="methodNameResolver" ref="propertiesMethodNameResolver"/-->
   </bean>
   <!-- 默认的InternalPathMethodNameResolver将进行如下解析：

    http://localhost:9080/springmvc-chapter4/user/list————>list方法名；

    http://localhost:9080/springmvc-chapter4/user/create————>create方法名；

    http://localhost:9080/springmvc-chapter4/user/update————>update功能处理方法名；

    http://localhost:9080/springmvc-chapter4/user/delete————>delete功能处理方法名。-->

    <bean id="propertiesMethodNameResolver" class="org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver">
        <property name="mappings">
            <props>
                <prop key="/create">create</prop>
                <prop key="/update">update</prop>
                <prop key="/delete">delete</prop>
                <prop key="/list">list</prop>
                <!-- 默认的行为 -->
                <prop key="/**">list</prop>
            </props>
        </property>
    </bean>   
   
   <bean id="userDelegate" class="cn.javass.chapter4.web.controller.UserDelegate">
       <property name="userService" ref="userService"/>
       <property name="createView" value="user2/create"/>
       <property name="updateView" value="user2/update"/>
       <property name="deleteView" value="user2/delete"/>
       <property name="listView" value="user2/list"/>
       <property name="redirectToListView" value="redirect:/user2/list"/>
   </bean>
   
   <bean name="/user2/**" class="org.springframework.web.servlet.mvc.multiaction.MultiActionController">
       <property name="delegate" ref="userDelegate"/>
       <property name="methodNameResolver" ref="parameterMethodNameResolver"/>
   </bean>

   <bean id="parameterMethodNameResolver" class="org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver">
       <!-- 1、根据请求参数名解析功能方法名 -->
       <property name="methodParamNames" value="create,update,delete"/>
       <!-- 2、根据请求参数名的值解析功能方法名 -->
       <property name="paramName" value="action"/>
       <property name="logicalMappings">
           <props>
               <prop key="doList">list</prop>
           </props>
       </property>
       <!-- 3、默认执行的功能处理方法 -->
       <property name="defaultMethodName" value="list"/>
   </bean>
    <!-- 使用ParameterMethodNameResolver将进行如下解析：

        http://localhost:9080/springmvc-chapter4/user2?create      ————>create功能处理方法名（参数名映射）；

        http://localhost:9080/springmvc-chapter4/user2?action=create————>create功能处理方法名（参数值映射）；



        http://localhost:9080/springmvc-chapter4/user2?update      ————>update功能处理方法名；

        http://localhost:9080/springmvc-chapter4/user2?action=update————>update功能处理方法名；



        http://localhost:9080/springmvc-chapter4/user2?delete      ————>delete功能处理方法名；

        http://localhost:9080/springmvc-chapter4/user2?action=delete————>delete功能处理方法名；



        http://localhost:9080/springmvc-chapter4/user2?doList      ————>通过logicalMappings解析为list功能处理方法。

        http://localhost:9080/springmvc-chapter4/user2?action=doList————>通过logicalMappings解析为list功能处理方法。



        http://localhost:9080/springmvc-chapter4/user2————>默认的功能处理方法名list（默认）。-->
    <!-- 注册WebBindingInitializer实现 -->
	<bean id="myWebBindingInitializer" class="cn.javass.chapter4.web.controller.support.initializer.MyWebBindingInitializer"/>
    <bean name="/dataBind" class="cn.javass.chapter4.web.controller.DataBinderTestController">
        <!-- 注入WebBindingInitializer实现 -->
        <!-- <property name="webBindingInitializer" ref="myWebBindingInitializer"/> -->
    </bean>
    <!--http://localhost:8080/springmvc-chapter4/dataBind?username=zhang&bool=yes&schooInfo.specialty=computer&hobbyList[0]=program&hobbyList[1]=music&map[key1]=value1&map[key2]=value2&phoneNumber=010-12345678&date=2012-3-18%2016:48:48&state=blocked-->

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages"/>
        <property name="fileEncodings" value="utf-8"/>
        <property name="cacheSeconds" value="120"/>
    </bean>

    <bean name="/error" class="cn.javass.chapter4.web.controller.ErrorController"/>
    
    <bean name="/dataBindError" class="cn.javass.chapter4.web.controller.DataBinderErrorTestController">
        <property name="formView" value="bindAndValidate/input"/>
        <property name="successView" value="bindAndValidate/success"/>
    </bean>

    <bean id="userModelValidator" class="cn.javass.chapter4.web.controller.support.validator.UserModelValidator"/>
	<bean name="/validator" class="cn.javass.chapter4.web.controller.RegisterSimpleFormController">
	    <property name="formView" value="registerAndValidator"/>
	    <property name="successView" value="redirect:/success"/>
	    <property name="validator" ref="userModelValidator"/>
	</bean>
    

   <bean name="/userAndValidator/**" class="cn.javass.chapter4.web.controller.UserAndValidatorController">
       <property name="userService" ref="userService"/>
       <property name="createView" value="user/createAndValidator"/>
       <property name="updateView" value="user/update"/>
       <property name="deleteView" value="user/delete"/>
       <property name="listView" value="user/list"/>
       <property name="redirectToListView" value="redirect:/user/list"/>
   </bean>
    

</beans>
