<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tom.demo.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.tom.demo.model.User" >
    <id column="user_id" property="user_id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="real_name" property="real_name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="office_phone" property="office_phone" jdbcType="VARCHAR" />
    <result column="error_count" property="error_count" jdbcType="INTEGER" />
    <result column="last_login_time" property="last_login_time" jdbcType="TIMESTAMP" />
    <result column="last_login_ip" property="last_login_ip" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, account, password, real_name, sex, email, mobile, office_phone, error_count, 
    last_login_time, last_login_ip, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from base_users
    where user_id = #{user_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from base_users
    where user_id = #{user_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tom.demo.model.User" >
    insert into base_users (user_id, account, password, 
      real_name, sex, email, 
      mobile, office_phone, error_count, 
      last_login_time, last_login_ip, remark
      )
    values (#{user_id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{real_name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{office_phone,jdbcType=VARCHAR}, #{error_count,jdbcType=INTEGER}, 
      #{last_login_time,jdbcType=TIMESTAMP}, #{last_login_ip,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tom.demo.model.User" >
    insert into base_users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="real_name != null" >
        real_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="office_phone != null" >
        office_phone,
      </if>
      <if test="error_count != null" >
        error_count,
      </if>
      <if test="last_login_time != null" >
        last_login_time,
      </if>
      <if test="last_login_ip != null" >
        last_login_ip,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="user_id != null" >
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="real_name != null" >
        #{real_name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="office_phone != null" >
        #{office_phone,jdbcType=VARCHAR},
      </if>
      <if test="error_count != null" >
        #{error_count,jdbcType=INTEGER},
      </if>
      <if test="last_login_time != null" >
        #{last_login_time,jdbcType=TIMESTAMP},
      </if>
      <if test="last_login_ip != null" >
        #{last_login_ip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tom.demo.model.User" >
    update base_users
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="real_name != null" >
        real_name = #{real_name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="office_phone != null" >
        office_phone = #{office_phone,jdbcType=VARCHAR},
      </if>
      <if test="error_count != null" >
        error_count = #{error_count,jdbcType=INTEGER},
      </if>
      <if test="last_login_time != null" >
        last_login_time = #{last_login_time,jdbcType=TIMESTAMP},
      </if>
      <if test="last_login_ip != null" >
        last_login_ip = #{last_login_ip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{user_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tom.demo.model.User" >
    update base_users
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{real_name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      office_phone = #{office_phone,jdbcType=VARCHAR},
      error_count = #{error_count,jdbcType=INTEGER},
      last_login_time = #{last_login_time,jdbcType=TIMESTAMP},
      last_login_ip = #{last_login_ip,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where user_id = #{user_id,jdbcType=INTEGER}
  </update>
</mapper>